# Build for development phase
FROM node:18 AS development

WORKDIR /node
COPY package*.json tsconfig.json ./

# Default build argument is dev
ARG NODE_ENV=development
ENV NODE_ENV=${NODE_ENV}
ARG FRONTEND_PORT
ENV FRONTEND_PORT=${FRONTEND_PORT}
RUN npm ci
WORKDIR /node/app

EXPOSE ${FRONTEND_PORT}
CMD ["npm", "run", "dev"]

# Build for production
FROM nginx:1.21.6 AS production

ARG NODE_ENV=production
ENV NODE_ENV=${NODE_ENV}

WORKDIR /node
COPY package*.json tsconfig.json ./
RUN npm install
COPY . .

# Use a non-root user for production phase
RUN addgroup -S appgroup && \
    adduser -S appuser -G appgroup && \
    chown -R appuser:appgroup /node && \
    chown -R appuser:appgroup /var/cache/nginx && \
    chown -R appuser:appgroup /var/log/nginx && \
    chown -R appuser:appgroup /etc/nginx/conf.d && \
    chmod -R g+w /var/cache/nginx && \
    chmod -R g+w /var/log/nginx && \
    chmod -R g+w /etc/nginx/conf.d

USER appuser

# Install Node Version 18
RUN apt-get update && apt-get install -y \
    software-properties-common \
    npm
RUN npm install npm@latest -g && \
    npm install n -g && \
    n 18

RUN npm run build

# Remove default nginx static resources
RUN rm -rf /usr/share/nginx/html/*
RUN mv dist/* /usr/share/nginx/html
COPY nginx.conf /etc/nginx/conf.d/default.conf

EXPOSE 80

# run nginx with global directives and daemon off
ENTRYPOINT ["nginx", "-g", "daemon off;"]
